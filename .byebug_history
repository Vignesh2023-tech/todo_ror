c
todo.valid?
todo.validate_user_id?
c
todo.save
todo
todo.skip_user_id_validation
c
todo.validate_user_id?
todo.validate_user_id
c
todo.save
todo.validate_user_id?
c
todo.errors
todo.save
c
todo.errors
todo.save
todo.valid?
c
todo.check_user_id_is_valid
todo.valid?
todo
c
todo.check_user_id_is_valid
todo.valid?
todo
c
todo.valid?
todo
c
user_id.to_i
user_id
c
user_id.to_i
user_id
c
todo.rn
c
todo.rn
c
todo.rn
c
todo.title
todo
c
response.body
response
expect(todo).to be_valid
todo.errors
todo
expect(todo).to be_valid
todo
expect(todo).to be_valid
todo
n
todo
n
todo
c
params[:due_date]
c
e
c
@todo.errors
e
@todo.save
params[:title]
c
params[:title]
c
n
response.body
response
n
 params[:due_date] < DateTime.parse(current_time).strftime("%Y-%m-%d")
if params[:due_date] < DateTime.parse(current_time).strftime("%Y-%m-%d")
n
c
n
c
response
c
response
c
response.body
c
response.body['error']
response.body
response
c
@todo.save
params[:completed]
c
response.body
response
e
error
params
c
e
expect(response).to have_http_statucs(400)
expect(response).to have_http_status(400)
except(response).to be_falsey
e
response
c
response = post '/create', params: {title: "Rspec", due_date:"2024-03-06", user_id: 100 }
n
s
n
response
e
c
params[:due_date]
c
time = DateTime.parse(s).strftime("%Y/%m/%d")
params[:due_date]
DateTime.parse(s).strftime("%Y/%m/%d")
DateTime.parse(s).strftime(%Y/%m/%d)
DateTime.parse(s).strftime("%d/%m/%Y")
s = Time.now.to_s
Time.now.to_s
Time.now
Date.now
c
current_user
c
current_user
c
@current_user
session[:user_id]
c
session[:user_id]
session[:user_id}
c
session[:user_id]
c
session[:user_id]
c
session[:user_id]
c
current_user
c
current_user
c
current_user
n
c
current_user
c
current_user.id
current_user
c
@current_user
current_user
